{"version":3,"sources":["components/AdminForm.jsx","pages/Admin.jsx","components/Div.jsx","components/IonText.jsx","components/IonAnchor.jsx","components/IonGrid.jsx","components/IonRow.jsx","components/IonCol.jsx","components/ComponentFinder.jsx","pages/Preview.jsx","components/AppNavigationButton.jsx","components/UploadFile.jsx","components/Welcome.jsx","App.jsx","index.js","logo.svg"],"names":["library","add","faPlusCircle","faMinusCircle","faArrowCircleUp","faArrowCircleDown","uiSchema","ui:enumDisabled","componentsSchema","title","type","properties","default","body","items","$ref","definitions","elements","component","enum","enumNames","text","description","dependencies","oneOf","href","required","content","flexWrap","alignItems","justifyContent","alignSelf","offset","pull","push","size","AdminForm","handleSubmit","_ref","formData","_this","props","updateFormData","console","log","json","handleChange","_ref2","arrayFieldTemplate","rowStyle2","border","padding","react_default","a","createElement","className","style","map","element","index","key","hasRemove","onClick","onDropIndexClick","react_fontawesome_index_es","icon","hasMoveUp","onReorderClick","hasMoveDown","children","canAdd","onAddClick","lib_default","schema","this","ArrayFieldTemplate","onSubmit","onChange","Component","Admin","document","_this$props","updateStateJson","components_AdminForm","DivComponent","Div","styled","div","IonText","color","ReactHtmlParser","IonAnchor","IonGrid","el","i","components_ComponentFinder","IonRow","nowrap","wrap-reverse","wrapReverse","align-items-start","alignItemsStart","align-items-center","alignItemsCenter","align-items-end","alignItemsEnd","align-items-stretch","alignItemsStretch","align-items-baseline","alignItemsBaseline","justify-content-start","justifyContentStart","justify-content-center","justifyContentCenter","justify-content-end","justifyContentEnd","justify-content-around","justifyContentAround","justify-content-between","justifyContentBetween","IonCol","align-self-start","alignSelfStart","align-self-center","alignSelfCenter","align-self-end","alignSelfEnd","align-self-stretch","alignSelfStretch","align-self-baseline","alignSelfBaseline","offset-lg","offsetLg","offset-md","offsetMd","offset-sm","offsetSm","offset-xl","offsetXl","offset-xs","offsetXs","pull-lg","pullLg","pull-md","pullMd","pull-sm","pullSm","pull-xl","pullXl","pull-xs","pullXs","push-lg","pushLg","push-md","pushMd","push-sm","pushSm","push-xl","pushXl","push-xs","pushXs","size-lg","sizeLg","size-md","sizeMd","size-sm","sizeSm","size-xl","sizeXl","size-xs","sizeXs","ComponentFinder","components_Div","components_IonText","components_IonAnchor","components_IonGrid","components_IonRow","components_IonCol","Preview","concat","AppNavigationButton","handleClick","UploadFile","onDrop","_useDropzone","useDropzone","getRootProps","getInputProps","components_AppNavigationButton","Welcome","Fragment","align","display","marginLeft","marginRight","width","src","logo","alt","withProps","matchProps","Object","assign","App","state","showNav","background-color","setState","exportHtml","fileDownload","documentElement","outerHTML","exportJson","JSON","stringify","importJson","acceptedFiles","reader","FileReader","onabort","onerror","onload","binaryStr","result","parse","forEach","file","readAsBinaryString","react_router_dom","id","to","process","components_UploadFile","react_router","exact","path","ReactDOM","render","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.18a77345.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-jsonschema-form';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlusCircle,\n  faMinusCircle,\n  faArrowCircleUp,\n  faArrowCircleDown,\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faPlusCircle, faMinusCircle, faArrowCircleUp, faArrowCircleDown);\nconst uiSchema = {\n  'ui:enumDisabled': ['row'],\n};\nconst componentsSchema = {\n  title: 'Configure your site',\n  type: 'object',\n  //   required: ['title'],\n  properties: {\n    title: {\n      type: 'string',\n      title: 'Title',\n      default: 'Hello world!',\n    },\n    body: {\n      type: 'array',\n      title: 'Build the content',\n      items: {\n        $ref: '#/definitions/elements',\n      },\n    },\n  },\n  definitions: {\n    elements: {\n      type: 'object',\n      properties: {\n        component: {\n          title: 'Choose the component',\n          type: 'string',\n          enum: ['div', 'p', 'a', 'grid'],\n          enumNames: ['Div', 'Paragraph', 'Anchor', 'Grid'],\n        },\n        text: {\n          type: 'string',\n          title: 'Text',\n          description: 'A sample text to import',\n        },\n      },\n      dependencies: {\n        component: {\n          oneOf: [\n            {\n              properties: {\n                component: {\n                  enum: ['a'],\n                },\n                href: {\n                  type: 'string',\n                  title: 'Href',\n                  description: 'path to the link',\n                },\n              },\n              required: ['href'],\n            },\n            {\n              properties: {\n                component: {\n                  enum: ['grid'],\n                },\n                content: {\n                  title: 'Add row',\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      component: {\n                        enum: ['row'],\n                        default: 'row',\n                      },\n                      flexWrap: {\n                        title: 'Flex-wrap',\n                        type: 'string',\n                        enum: ['nowrap', 'wrap', 'wrap-reverse'],\n                        enumNames: ['Nowrap(Default)', 'Wrap', 'Wrap-reverse'],\n                      },\n                      alignItems: {\n                        title: 'Align-Items',\n                        type: 'string',\n                        enum: [\n                          'flex-start',\n                          'flex-end',\n                          'center',\n                          'baseline',\n                          'stretch',\n                        ],\n                        enumNames: [\n                          'Flex-start',\n                          'Flex-end',\n                          'Center',\n                          'Baseline',\n                          'Stretch',\n                        ],\n                      },\n                      justifyContent: {\n                        title: 'Justify-content',\n                        type: 'string',\n                        enum: [\n                          'flex-start',\n                          'flex-end',\n                          'center',\n                          'space-between',\n                          'space-around',\n                        ],\n                        enumNames: [\n                          'Flex-start',\n                          'Flex-end',\n                          'Center',\n                          'Space-between',\n                          'Space-around',\n                        ],\n                      },\n                      content: {\n                        title: 'Add column',\n                        type: 'array',\n                        items: {\n                          type: 'object',\n                          properties: {\n                            component: {\n                              enum: ['col'],\n                              default: 'col',\n                            },\n                            alignSelf: {\n                              title: 'Align-Self',\n                              type: 'string',\n                              enum: [\n                                'align-self-center',\n                                'align-self-start',\n                                'align-self-end',\n                                'align-self-stretch',\n                                'align-self-baseline',\n                              ],\n                              default: 'align-self-center',\n                            },\n                            offset: {\n                              description:\n                                'The amount to offset the column, in terms of how many columns it should shift to the end of the total available.',\n                              title: 'Offset',\n                              type: 'string',\n                              enum: [\n                                'offset',\n                                'offset-lg',\n                                'offset-sm',\n                                'offset-xl',\n                                'offset-xs',\n                              ],\n                              default: 'offset',\n                            },\n                            pull: {\n                              description:\n                                'The amount to pull the column, in terms of how many columns it should shift to the start of the total available.',\n                              title: 'Pull options',\n                              type: 'string',\n                              enum: [\n                                'pull',\n                                'pull-lg',\n                                'pull-md',\n                                'pull-sm',\n                                'pull-xl',\n                                'pull-xs',\n                              ],\n                              default: 'pull',\n                            },\n                            push: {\n                              title: 'Push options',\n                              type: 'string',\n                              enum: [\n                                'push',\n                                'push-lg',\n                                'push-md',\n                                'push-sm',\n                                'push-xl',\n                                'push-xs',\n                              ],\n                              default: 'push',\n                            },\n                            size: {\n                              description:\n                                'The size of the column, in terms of how many columns it should take up out of the total available. If \"auto\" is passed, the column will be the size of its content.',\n                              title: 'Size options',\n                              type: 'string',\n                              enum: [\n                                'size',\n                                'size-lg',\n                                'size-md',\n                                'size-sm',\n                                'size-xl',\n                                'size-xs',\n                              ],\n                              default: 'size',\n                            },\n                            content: {\n                              title: 'Add column content',\n                              type: 'array',\n                              items: {\n                                $ref: '#/definitions/elements',\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            {\n              properties: {\n                component: {\n                  enum: ['div', 'p'],\n                },\n              },\n            },\n          ],\n        },\n      },\n    },\n  },\n};\n\nclass AdminForm extends Component {\n  handleSubmit = ({ formData }) => {\n    this.props.updateFormData(formData);\n    console.log(this.props.json);\n  };\n  handleChange = ({ formData }) => {\n    console.log(formData);\n  };\n  arrayFieldTemplate = props => {\n    const rowStyle = {\n      border: '1px solid red',\n      padding: '10px',\n    };\n    const rowStyle2 = {\n      border: '1px solid blue',\n      padding: '10px',\n    };\n    return (\n      <div className=\"row\" style={rowStyle}>\n        <div className=\"col col-sm-12\">\n          {props.title}\n          <br />\n          {props.items.map((element, index) => (\n            <div key={index} className=\"row\" style={rowStyle2}>\n              <div className=\"col-sm-12 text-right\">\n                {element.hasRemove && (\n                  <button\n                    className=\"btn btn-danger mr-2\"\n                    type=\"button\"\n                    onClick={element.onDropIndexClick(index)}\n                  >\n                    <FontAwesomeIcon icon=\"minus-circle\" />\n                  </button>\n                )}\n                {element.hasMoveUp && (\n                  <button\n                    className=\"btn btn-info mr-2\"\n                    onClick={element.onReorderClick(index, index - 1)}\n                  >\n                    <FontAwesomeIcon icon=\"arrow-circle-up\" />\n                  </button>\n                )}\n                {element.hasMoveDown && (\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={element.onReorderClick(index, index + 1)}\n                  >\n                    <FontAwesomeIcon icon=\"arrow-circle-down\" />\n                  </button>\n                )}\n              </div>\n              <div className=\"col col-sm-12\">{element.children}</div>\n            </div>\n          ))}\n          {props.canAdd && (\n            <button\n              className=\"btn btn-info\"\n              type=\"button\"\n              onClick={props.onAddClick}\n            >\n              <FontAwesomeIcon icon=\"plus-circle\" />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Form\n        className=\"admin-form\"\n        uiSchema={uiSchema}\n        schema={componentsSchema}\n        formData={this.props.formData}\n        ArrayFieldTemplate={this.arrayFieldTemplate}\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default AdminForm;\n","import React, { Component } from 'react';\nimport AdminForm from '../components/AdminForm';\n\nclass Admin extends Component {\n  componentDidMount() {\n    document.title = `Corgi Admin`;\n  }\n\n  render() {\n    const { json, updateStateJson } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Welcome to Corgi CMS</h1>\n        <AdminForm formData={json} updateFormData={updateStateJson} />\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DivComponent = ({ element }) => {\n  const Div = styled.div(element.style);\n  return <Div>{element.content}</Div>;\n};\n\nexport default DivComponent;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst IonText = ({ element }) => {\n  // color options that can be passed as style are \"primary\", \"secondary\", \"tertiary\", \"success\", \"warning\", \"danger\", \"light\", \"medium\", and \"dark\n  return <ion-text color=\"danger\">{ReactHtmlParser(element.text)}</ion-text>;\n};\n\nexport default IonText;\n","import React from 'react';\n\nconst IonAnchor = ({ element }) => {\n  return (\n    // color options that can be passed as style are \"primary\", \"secondary\", \"tertiary\", \"success\", \"warning\", \"danger\", \"light\", \"medium\", and \"dark\n    <ion-anchor color=\"primary\" href={element.href}>\n      {element.text}\n    </ion-anchor>\n  );\n};\n\nexport default IonAnchor;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonGrid = ({ element }) => {\n  return (\n    <ion-grid>\n      {element.content.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )}\n    </ion-grid>\n  );\n};\n\nexport default IonGrid;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonRow = ({ element }) => {\n  return (\n    <ion-row\n      nowrap={element.nowrap}\n      wrap-reverse={element.wrapReverse}\n      align-items-start={element.alignItemsStart}\n      align-items-center={element.alignItemsCenter}\n      align-items-end={element.alignItemsEnd}\n      align-items-stretch={element.alignItemsStretch}\n      align-items-baseline={element.alignItemsBaseline}\n      justify-content-start={element.justifyContentStart}\n      justify-content-center={element.justifyContentCenter}\n      justify-content-end={element.justifyContentEnd}\n      justify-content-around={element.justifyContentAround}\n      justify-content-between={element.justifyContentBetween}\n    >\n      {element.content.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )}\n    </ion-row>\n  );\n};\n\nexport default IonRow;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonCol = ({ element }) => {\n  return (\n    <ion-col\n      align-self-start={element.alignSelfStart}\n      align-self-center={element.alignSelfCenter}\n      align-self-end={element.alignSelfEnd}\n      align-self-stretch={element.alignSelfStretch}\n      align-self-baseline={element.alignSelfBaseline}\n      offset={element.offset}\n      offset-lg={element.offsetLg}\n      offset-md={element.offsetMd}\n      offset-sm={element.offsetSm}\n      offset-xl={element.offsetXl}\n      offset-xs={element.offsetXs}\n      pull={element.pull}\n      pull-lg={element.pullLg}\n      pull-md={element.pullMd}\n      pull-sm={element.pullSm}\n      pull-xl={element.pullXl}\n      pull-xs={element.pullXs}\n      push={element.push}\n      push-lg={element.pushLg}\n      push-md={element.pushMd}\n      push-sm={element.pushSm}\n      push-xl={element.pushXl}\n      push-xs={element.pushXs}\n      size={element.size}\n      size-lg={element.sizeLg}\n      size-md={element.sizeMd}\n      size-sm={element.sizeSm}\n      size-xl={element.sizeXl}\n      size-xs={element.sizeXs}\n    >\n      {element.content.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )}\n    </ion-col>\n  );\n};\n\nexport default IonCol;\n","import React from 'react';\nimport Div from './Div';\nimport IonText from './IonText';\nimport IonAnchor from './IonAnchor';\nimport IonGrid from './IonGrid';\nimport IonRow from './IonRow';\nimport IonCol from './IonCol';\n\nconst ComponentFinder = ({ element, i }) => {\n  if (element && element.component) {\n    if (element.component === 'div') {\n      return <Div element={element} key={i} />;\n    } else if (element.component === 'p') {\n      return <IonText element={element} key={i} />;\n    } else if (element.component === 'a') {\n      return <IonAnchor element={element} key={i} />;\n    } else if (element.component === 'grid') {\n      return <IonGrid element={element} key={i} />;\n    } else if (element.component === 'row') {\n      return <IonRow element={element} key={i} />;\n    } else if (element.component === 'col') {\n      return <IonCol element={element} key={i} />;\n    }\n  }\n};\n\nexport default ComponentFinder;\n","import React, { Component } from 'react';\nimport ComponentGenerator from '../components/ComponentFinder';\n\nclass Preview extends Component {\n  componentDidMount() {\n    const { json } = this.props;\n    if (json && json.title) {\n      document.title = `Corgi Preview: ${json.title}`;\n    }\n    console.log(json);\n  }\n\n  render() {\n    const { json } = this.props;\n    return json && json.body ? (\n      json.body.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )\n    ) : (\n      <h1>Nothing to preview yet</h1>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\n\nconst AppNavigationButton = ({ type, text, handleClick }) => (\n  <button\n    onClick={() => handleClick()}\n    type=\"button\"\n    className={`btn btn-outline-${type}`}\n  >\n    {text}\n  </button>\n);\n\nexport default AppNavigationButton;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport AppNavigationButton from './AppNavigationButton';\n\nconst UploadFile = ({ onDrop }) => {\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <AppNavigationButton\n        text=\"Import JSON\"\n        type=\"secondary\"\n        handleClick={() => {}}\n      />\n    </div>\n  );\n};\n\nexport default UploadFile;\n","import React from 'react';\nimport logo from '../logo.svg';\n\nconst Welcome = () => (\n  <>\n    <h1 align=\"center\">Welcome to Corgi CMS</h1>\n    <img\n      style={{\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '40%',\n      }}\n      src={logo}\n      alt=\"logo\"\n    />\n  </>\n);\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport fileDownload from 'js-file-download';\nimport Admin from './pages/Admin';\nimport Preview from './pages/Preview';\nimport AppNavigationButton from './components/AppNavigationButton';\nimport UploadFile from './components/UploadFile';\nimport Welcome from './components/Welcome';\nimport logo from './logo.svg';\n\nfunction withProps(Component, props) {\n  return function(matchProps) {\n    return <Component {...props} {...matchProps} />;\n  };\n}\n\nclass App extends Component {\n  state = {\n    showNav: true,\n    json: {\n      title: 'title example',\n      body: [\n        {\n          component: 'p',\n          text: '<h1>H1 text</h1>',\n          // style: {\n          //   color: 'red',\n          //   'background-color': 'pink',\n          // },\n        },\n        {\n          component: 'a',\n          text: 'link text',\n          href: '/example/href',\n          // style: {\n          //   color: 'yellow',\n          //   'background-color': 'blue',\n          // },\n        },\n        {\n          component: 'grid',\n          content: [\n            {\n              component: 'row',\n              content: [\n                {\n                  component: 'col',\n                  content: [\n                    {\n                      component: 'p',\n                      text: '<h1>H1 text</h1>',\n                      // style: {\n                      //   color: 'red',\n                      //   'background-color': 'pink',\n                      // },\n                    },\n                    {\n                      component: 'a',\n                      text: 'link text',\n                      href: '/example/href',\n                      style: {\n                        color: 'yellow',\n                        'background-color': 'blue',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  };\n\n  updateStateJson = formData => {\n    this.setState({ json: formData });\n  };\n\n  exportHtml = () => {\n    this.setState({ showNav: false }, () => {\n      fileDownload(document.documentElement.outerHTML, 'index.html');\n      this.setState({ showNav: true });\n    });\n  };\n\n  exportJson = () => {\n    fileDownload(JSON.stringify(this.state.json), 'html-information.json');\n  };\n\n  importJson = () => {\n    console.log('import Json');\n  };\n\n  onDrop = acceptedFiles => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log('file reading was aborted');\n    reader.onerror = () => console.log('file reading has failed');\n    reader.onload = () => {\n      const binaryStr = reader.result;\n      console.log(binaryStr);\n\n      this.setState({ json: JSON.parse(binaryStr) });\n    };\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n  };\n\n  render() {\n    const { showNav } = this.state;\n    return (\n      <Router>\n        <div>\n          {showNav ? (\n            <nav\n              id=\"navbar\"\n              className=\"navbar navbar-dark bg-dark navbar-expand-lg sticky-top\"\n            >\n              <div className=\"navbar-nav\">\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  to={process.env.PUBLIC_URL + '/'}\n                >\n                  <img\n                    style={{\n                      width: '26px',\n                    }}\n                    src={logo}\n                    alt=\"logo\"\n                  />\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  to={process.env.PUBLIC_URL + '/admin'}\n                >\n                  Admin\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  to={process.env.PUBLIC_URL + '/preview'}\n                >\n                  Preview\n                </NavLink>\n\n                <AppNavigationButton\n                  text=\"Export HTML\"\n                  type=\"primary\"\n                  handleClick={this.exportHtml}\n                />\n\n                <AppNavigationButton\n                  text=\"Export JSON\"\n                  type=\"primary\"\n                  handleClick={this.exportJson}\n                />\n\n                <UploadFile onDrop={this.onDrop} />\n              </div>\n            </nav>\n          ) : (\n            ''\n          )}\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/'}\n            component={Welcome}\n          />\n\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/preview'}\n            component={withProps(Preview, { json: this.state.json })}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/admin'}\n            component={withProps(Admin, {\n              json: this.state.json,\n              updateStateJson: this.updateStateJson,\n            })}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.b9afc9fb.svg\";"],"sourceRoot":""}