{"version":3,"sources":["corgi-bark.mp3","components/AdminForm.jsx","pages/Admin.jsx","components/IonText.jsx","components/IonAnchor.jsx","components/IonGrid.jsx","components/IonRow.jsx","components/IonCol.jsx","components/IonImg.jsx","components/ComponentFinder.jsx","pages/Preview.jsx","components/AppNavigationButton.jsx","components/UploadFile.jsx","components/Welcome.jsx","App.jsx","index.js","logo.svg"],"names":["module","exports","__webpack_require__","p","library","add","faPlusCircle","faMinusCircle","faArrowCircleUp","faArrowCircleDown","uiSchema","ui:enumDisabled","componentsSchema","title","type","properties","default","body","items","$ref","definitions","elements","component","enum","enumNames","text","description","dependencies","oneOf","href","required","file","format","content","flexWrap","alignItems","justifyContent","alignSelf","offset","pull","push","size","AdminForm","handleSubmit","_ref","formData","_this","props","updateFormData","console","log","json","handleChange","_ref2","arrayFieldTemplate","rowStyle2","border","padding","react_default","a","createElement","className","style","map","element","index","key","hasRemove","onClick","onDropIndexClick","react_fontawesome_index_es","icon","hasMoveUp","onReorderClick","hasMoveDown","children","canAdd","onAddClick","lib_default","schema","this","ArrayFieldTemplate","onSubmit","onChange","Component","Admin","document","_this$props","updateStateJson","components_AdminForm","IonText","color","ReactHtmlParser","IonAnchor","IonGrid","backgroundImage","concat","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","el","i","components_ComponentFinder","IonRow","nowrap","wrap-reverse","wrapReverse","align-items-start","alignItemsStart","align-items-center","alignItemsCenter","align-items-end","alignItemsEnd","align-items-stretch","alignItemsStretch","align-items-baseline","alignItemsBaseline","justify-content-start","justifyContentStart","justify-content-center","justifyContentCenter","justify-content-end","justifyContentEnd","justify-content-around","justifyContentAround","justify-content-between","justifyContentBetween","IonCol","align-self-start","alignSelfStart","align-self-center","alignSelfCenter","align-self-end","alignSelfEnd","align-self-stretch","alignSelfStretch","align-self-baseline","alignSelfBaseline","offset-lg","offsetLg","offset-md","offsetMd","offset-sm","offsetSm","offset-xl","offsetXl","offset-xs","offsetXs","pull-lg","pullLg","pull-md","pullMd","pull-sm","pullSm","pull-xl","pullXl","pull-xs","pullXs","push-lg","pushLg","push-md","pushMd","push-sm","pushSm","push-xl","pushXl","push-xs","pushXs","size-lg","sizeLg","size-md","sizeMd","size-sm","sizeSm","size-xl","sizeXl","size-xs","sizeXs","IonImg","src","ComponentFinder","components_IonImg","components_IonText","components_IonAnchor","components_IonGrid","components_IonRow","components_IonCol","Preview","AppNavigationButton","handleClick","UploadFile","onDrop","_useDropzone","useDropzone","getRootProps","getInputProps","components_AppNavigationButton","Welcome","_useState","useState","_useState2","Object","slicedToArray","hasVibrateClass","setHasVibrateClass","Fragment","align","event","target","classList","corgiBark","Audio","soundFile","play","onended","cursor","display","marginLeft","marginRight","width","logo","alt","withProps","matchProps","assign","App","state","showNav","background-color","setState","exportHtml","fileDownload","documentElement","outerHTML","exportJson","JSON","stringify","importJson","acceptedFiles","reader","FileReader","onabort","onerror","onload","binaryStr","result","parse","forEach","readAsBinaryString","react_router_dom","basename","id","to","components_UploadFile","react_router","exact","path","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.101b6701.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corgi-bark.2cb6a9d2.mp3\";","import React, { Component } from 'react';\nimport Form from 'react-jsonschema-form';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlusCircle,\n  faMinusCircle,\n  faArrowCircleUp,\n  faArrowCircleDown,\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faPlusCircle, faMinusCircle, faArrowCircleUp, faArrowCircleDown);\nconst uiSchema = {\n  'ui:enumDisabled': ['row'],\n};\nconst componentsSchema = {\n  title: 'Configure your site',\n  type: 'object',\n  //   required: ['title'],\n  properties: {\n    title: {\n      type: 'string',\n      title: 'Title',\n      default: 'Hello world!',\n    },\n    body: {\n      type: 'array',\n      title: 'Build the content',\n      items: {\n        $ref: '#/definitions/elements',\n      },\n    },\n  },\n  definitions: {\n    elements: {\n      type: 'object',\n      properties: {\n        component: {\n          title: 'Choose the component',\n          type: 'string',\n          enum: ['div', 'text', 'a', 'grid', 'img'],\n          enumNames: ['Div', 'TextComponent', 'Anchor', 'Grid', 'Image'],\n        },\n        text: {\n          type: 'string',\n          title: 'Text',\n          description: 'A sample text to import',\n        },\n      },\n      dependencies: {\n        component: {\n          oneOf: [\n            {\n              properties: {\n                component: {\n                  enum: ['a'],\n                },\n                href: {\n                  type: 'string',\n                  title: 'Href',\n                  description: 'path to the link',\n                },\n              },\n              required: ['href'],\n            },\n            {\n              properties: {\n                component: {\n                  enum: ['img'],\n                },\n                file: {\n                  type: 'string',\n                  format: 'data-url',\n                  title: 'Single Image',\n                },\n              },\n            },\n            {\n              properties: {\n                component: {\n                  enum: ['grid'],\n                },\n                file: {\n                  type: 'string',\n                  format: 'data-url',\n                  title: 'Add background image',\n                },\n                content: {\n                  title: 'Add row',\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      component: {\n                        enum: ['row'],\n                        default: 'row',\n                      },\n                      flexWrap: {\n                        title: 'Flex-wrap',\n                        type: 'string',\n                        enum: ['nowrap', 'wrap', 'wrap-reverse'],\n                        enumNames: ['Nowrap(Default)', 'Wrap', 'Wrap-reverse'],\n                      },\n                      alignItems: {\n                        title: 'Align-Items',\n                        type: 'string',\n                        enum: [\n                          'flex-start',\n                          'flex-end',\n                          'center',\n                          'baseline',\n                          'stretch',\n                        ],\n                        enumNames: [\n                          'Flex-start',\n                          'Flex-end',\n                          'Center',\n                          'Baseline',\n                          'Stretch',\n                        ],\n                      },\n                      justifyContent: {\n                        title: 'Justify-content',\n                        type: 'string',\n                        enum: [\n                          'flex-start',\n                          'flex-end',\n                          'center',\n                          'space-between',\n                          'space-around',\n                        ],\n                        enumNames: [\n                          'Flex-start',\n                          'Flex-end',\n                          'Center',\n                          'Space-between',\n                          'Space-around',\n                        ],\n                      },\n                      content: {\n                        title: 'Add column',\n                        type: 'array',\n                        items: {\n                          type: 'object',\n                          properties: {\n                            component: {\n                              enum: ['col'],\n                              default: 'col',\n                            },\n                            alignSelf: {\n                              title: 'Align-Self',\n                              type: 'string',\n                              enum: [\n                                'align-self-center',\n                                'align-self-start',\n                                'align-self-end',\n                                'align-self-stretch',\n                                'align-self-baseline',\n                              ],\n                              default: 'align-self-center',\n                            },\n                            offset: {\n                              description:\n                                'The amount to offset the column, in terms of how many columns it should shift to the end of the total available.',\n                              title: 'Offset',\n                              type: 'string',\n                              enum: [\n                                'offset',\n                                'offset-lg',\n                                'offset-sm',\n                                'offset-xl',\n                                'offset-xs',\n                              ],\n                              default: 'offset',\n                            },\n                            pull: {\n                              description:\n                                'The amount to pull the column, in terms of how many columns it should shift to the start of the total available.',\n                              title: 'Pull options',\n                              type: 'string',\n                              enum: [\n                                'pull',\n                                'pull-lg',\n                                'pull-md',\n                                'pull-sm',\n                                'pull-xl',\n                                'pull-xs',\n                              ],\n                              default: 'pull',\n                            },\n                            push: {\n                              title: 'Push options',\n                              type: 'string',\n                              enum: [\n                                'push',\n                                'push-lg',\n                                'push-md',\n                                'push-sm',\n                                'push-xl',\n                                'push-xs',\n                              ],\n                              default: 'push',\n                            },\n                            size: {\n                              description:\n                                'The size of the column, in terms of how many columns it should take up out of the total available. If \"auto\" is passed, the column will be the size of its content.',\n                              title: 'Size options',\n                              type: 'string',\n                              enum: [\n                                'size',\n                                'size-lg',\n                                'size-md',\n                                'size-sm',\n                                'size-xl',\n                                'size-xs',\n                              ],\n                              default: 'size',\n                            },\n                            content: {\n                              title: 'Add column content',\n                              type: 'array',\n                              items: {\n                                $ref: '#/definitions/elements',\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            {\n              properties: {\n                component: {\n                  enum: ['div', 'text'],\n                },\n              },\n            },\n          ],\n        },\n      },\n    },\n  },\n};\n\nclass AdminForm extends Component {\n  handleSubmit = ({ formData }) => {\n    this.props.updateFormData(formData);\n    console.log(this.props.json);\n  };\n  handleChange = ({ formData }) => {\n    console.log(formData);\n  };\n  arrayFieldTemplate = props => {\n    const rowStyle = {\n      border: '1px solid red',\n      padding: '10px',\n    };\n    const rowStyle2 = {\n      border: '1px solid blue',\n      padding: '10px',\n    };\n    return (\n      <div className=\"row\" style={rowStyle}>\n        <div className=\"col col-sm-12\">\n          {props.title}\n          <br />\n          {props.items.map((element, index) => (\n            <div key={index} className=\"row\" style={rowStyle2}>\n              <div className=\"col-sm-12 text-right\">\n                {element.hasRemove && (\n                  <button\n                    className=\"btn btn-danger mr-2\"\n                    type=\"button\"\n                    onClick={element.onDropIndexClick(index)}\n                  >\n                    <FontAwesomeIcon icon=\"minus-circle\" />\n                  </button>\n                )}\n                {element.hasMoveUp && (\n                  <button\n                    className=\"btn btn-info mr-2\"\n                    onClick={element.onReorderClick(index, index - 1)}\n                  >\n                    <FontAwesomeIcon icon=\"arrow-circle-up\" />\n                  </button>\n                )}\n                {element.hasMoveDown && (\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={element.onReorderClick(index, index + 1)}\n                  >\n                    <FontAwesomeIcon icon=\"arrow-circle-down\" />\n                  </button>\n                )}\n              </div>\n              <div className=\"col col-sm-12\">{element.children}</div>\n            </div>\n          ))}\n          {props.canAdd && (\n            <button\n              className=\"btn btn-info\"\n              type=\"button\"\n              onClick={props.onAddClick}\n            >\n              <FontAwesomeIcon icon=\"plus-circle\" />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Form\n        className=\"admin-form\"\n        uiSchema={uiSchema}\n        schema={componentsSchema}\n        formData={this.props.formData}\n        ArrayFieldTemplate={this.arrayFieldTemplate}\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default AdminForm;\n","import React, { Component } from 'react';\nimport AdminForm from '../components/AdminForm';\n\nclass Admin extends Component {\n  componentDidMount() {\n    document.title = `Corgi Admin`;\n  }\n\n  render() {\n    const { json, updateStateJson } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Welcome to Corgi CMS</h1>\n        <AdminForm formData={json} updateFormData={updateStateJson} />\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst IonText = ({ element }) => {\n  // color options that can be passed as style are \"primary\", \"secondary\", \"tertiary\", \"success\", \"warning\", \"danger\", \"light\", \"medium\", and \"dark\n  return <ion-text color=\"danger\">{ReactHtmlParser(element.text)}</ion-text>;\n};\n\nexport default IonText;\n","import React from 'react';\n\nconst IonAnchor = ({ element }) => {\n  return (\n    // color options that can be passed as style are \"primary\", \"secondary\", \"tertiary\", \"success\", \"warning\", \"danger\", \"light\", \"medium\", and \"dark\n    <ion-anchor color=\"primary\" href={element.href}>\n      {element.text}\n    </ion-anchor>\n  );\n};\n\nexport default IonAnchor;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonGrid = ({ element }) => {\n  const backgroundImage = {\n    backgroundImage: `url(${element.file})`,\n    backgroundColor: 'transparent',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  };\n\n  return (\n    <ion-grid>\n      {element.file ? (\n        <div style={backgroundImage}>\n          {element.content.map((el, i) =>\n            el.component ? <ComponentGenerator element={el} key={i} /> : ''\n          )}\n        </div>\n      ) : (\n        element.content.map((el, i) =>\n          el.component ? <ComponentGenerator element={el} key={i} /> : ''\n        )\n      )}\n    </ion-grid>\n  );\n};\n\nexport default IonGrid;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonRow = ({ element }) => {\n  return (\n    <ion-row\n      nowrap={element.nowrap}\n      wrap-reverse={element.wrapReverse}\n      align-items-start={element.alignItemsStart}\n      align-items-center={element.alignItemsCenter}\n      align-items-end={element.alignItemsEnd}\n      align-items-stretch={element.alignItemsStretch}\n      align-items-baseline={element.alignItemsBaseline}\n      justify-content-start={element.justifyContentStart}\n      justify-content-center={element.justifyContentCenter}\n      justify-content-end={element.justifyContentEnd}\n      justify-content-around={element.justifyContentAround}\n      justify-content-between={element.justifyContentBetween}\n    >\n      {element.content.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )}\n    </ion-row>\n  );\n};\n\nexport default IonRow;\n","import React from 'react';\nimport ComponentGenerator from './ComponentFinder';\n\nconst IonCol = ({ element }) => {\n  return (\n    <ion-col\n      align-self-start={element.alignSelfStart}\n      align-self-center={element.alignSelfCenter}\n      align-self-end={element.alignSelfEnd}\n      align-self-stretch={element.alignSelfStretch}\n      align-self-baseline={element.alignSelfBaseline}\n      offset={element.offset}\n      offset-lg={element.offsetLg}\n      offset-md={element.offsetMd}\n      offset-sm={element.offsetSm}\n      offset-xl={element.offsetXl}\n      offset-xs={element.offsetXs}\n      pull={element.pull}\n      pull-lg={element.pullLg}\n      pull-md={element.pullMd}\n      pull-sm={element.pullSm}\n      pull-xl={element.pullXl}\n      pull-xs={element.pullXs}\n      push={element.push}\n      push-lg={element.pushLg}\n      push-md={element.pushMd}\n      push-sm={element.pushSm}\n      push-xl={element.pushXl}\n      push-xs={element.pushXs}\n      size={element.size}\n      size-lg={element.sizeLg}\n      size-md={element.sizeMd}\n      size-sm={element.sizeSm}\n      size-xl={element.sizeXl}\n      size-xs={element.sizeXs}\n    >\n      {element.content.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )}\n    </ion-col>\n  );\n};\n\nexport default IonCol;\n","import React from 'react';\n\nconst IonImg = ({ element }) => {\n  return <IonImg src={element.file} />;\n};\n\nexport default IonImg;\n","import React from 'react';\nimport IonText from './IonText';\nimport IonAnchor from './IonAnchor';\nimport IonGrid from './IonGrid';\nimport IonRow from './IonRow';\nimport IonCol from './IonCol';\nimport IonImg from './IonImg';\n\nconst ComponentFinder = ({ element, i }) => {\n  if (element && element.component) {\n    if (element.component === 'img') {\n      return <IonImg element={element} key={i} />;\n    } else if (element.component === 'text') {\n      return <IonText element={element} key={i} />;\n    } else if (element.component === 'a') {\n      return <IonAnchor element={element} key={i} />;\n    } else if (element.component === 'grid') {\n      return <IonGrid element={element} key={i} />;\n    } else if (element.component === 'row') {\n      return <IonRow element={element} key={i} />;\n    } else if (element.component === 'col') {\n      return <IonCol element={element} key={i} />;\n    }\n  }\n};\n\nexport default ComponentFinder;\n","import React, { Component } from 'react';\nimport ComponentGenerator from '../components/ComponentFinder';\n\nclass Preview extends Component {\n  componentDidMount() {\n    const { json } = this.props;\n    if (json && json.title) {\n      document.title = `Corgi Preview: ${json.title}`;\n    }\n    console.log(json);\n  }\n\n  render() {\n    const { json } = this.props;\n    return json && json.body ? (\n      json.body.map((el, i) =>\n        el.component ? <ComponentGenerator element={el} key={i} /> : ''\n      )\n    ) : (\n      <h1>Nothing to preview yet</h1>\n    );\n  }\n}\n\nexport default Preview;\n","import React from 'react';\n\nconst AppNavigationButton = ({ type, text, handleClick }) => (\n  <button\n    onClick={() => handleClick()}\n    type=\"button\"\n    className={`btn btn-outline-${type}`}\n  >\n    {text}\n  </button>\n);\n\nexport default AppNavigationButton;\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport AppNavigationButton from './AppNavigationButton';\n\nconst UploadFile = ({ onDrop }) => {\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <AppNavigationButton\n        text=\"Import JSON\"\n        type=\"secondary\"\n        handleClick={() => {}}\n      />\n    </div>\n  );\n};\n\nexport default UploadFile;\n","import React, { useState } from 'react';\nimport logo from '../logo.svg';\nimport soundFile from '../corgi-bark.mp3';\n\nconst Welcome = () => {\n  const [hasVibrateClass, setHasVibrateClass] = useState(false);\n\n  function playSound(event) {\n    event.target.classList.add('vibrate');\n    setHasVibrateClass(true);\n    let corgiBark = new Audio(soundFile);\n    corgiBark.play();\n    corgiBark.onended = function() {\n      setHasVibrateClass(false);\n    };\n  }\n\n  return (\n    <>\n      <h1 align=\"center\">Welcome to Corgi CMS</h1>\n      <img\n        onClick={playSound}\n        style={{\n          cursor: 'pointer',\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          width: '40%',\n        }}\n        className={hasVibrateClass ? 'vibrate' : ''}\n        src={logo}\n        alt=\"logo\"\n      />\n    </>\n  );\n};\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport fileDownload from 'js-file-download';\nimport Admin from './pages/Admin';\nimport Preview from './pages/Preview';\nimport AppNavigationButton from './components/AppNavigationButton';\nimport UploadFile from './components/UploadFile';\nimport Welcome from './components/Welcome';\nimport logo from './logo.svg';\n\nfunction withProps(Component, props) {\n  return function(matchProps) {\n    return <Component {...props} {...matchProps} />;\n  };\n}\n\nclass App extends Component {\n  state = {\n    showNav: true,\n    json: {\n      title: 'title example',\n      body: [\n        {\n          component: 'text',\n          text: '<h1>H1 text</h1>',\n          // style: {\n          //   color: 'red',\n          //   'background-color': 'pink',\n          // },\n        },\n        {\n          component: 'a',\n          text: 'link text',\n          href: '/example/href',\n          // style: {\n          //   color: 'yellow',\n          //   'background-color': 'blue',\n          // },\n        },\n        {\n          component: 'grid',\n          content: [\n            {\n              component: 'row',\n              content: [\n                {\n                  component: 'col',\n                  content: [\n                    {\n                      component: 'text',\n                      text: '<h1>H1 text</h1>',\n                      // style: {\n                      //   color: 'red',\n                      //   'background-color': 'pink',\n                      // },\n                    },\n                    {\n                      component: 'a',\n                      text: 'link text',\n                      href: '/example/href',\n                      style: {\n                        color: 'yellow',\n                        'background-color': 'blue',\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  };\n\n  updateStateJson = formData => {\n    this.setState({ json: formData });\n  };\n\n  exportHtml = () => {\n    this.setState({ showNav: false }, () => {\n      fileDownload(document.documentElement.outerHTML, 'index.html');\n      this.setState({ showNav: true });\n    });\n  };\n\n  exportJson = () => {\n    fileDownload(JSON.stringify(this.state.json), 'html-information.json');\n  };\n\n  importJson = () => {\n    console.log('import Json');\n  };\n\n  onDrop = acceptedFiles => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log('file reading was aborted');\n    reader.onerror = () => console.log('file reading has failed');\n    reader.onload = () => {\n      const binaryStr = reader.result;\n      console.log(binaryStr);\n\n      this.setState({ json: JSON.parse(binaryStr) });\n    };\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n  };\n\n  render() {\n    const { showNav } = this.state;\n    return (\n      <Router basename=\"/\">\n        <div>\n          {showNav ? (\n            <nav\n              id=\"navbar\"\n              className=\"navbar navbar-dark bg-dark navbar-expand-lg sticky-top\"\n            >\n              <div className=\"navbar-nav\">\n                <NavLink className=\"nav-item nav-link\" to=\"/\">\n                  <img\n                    style={{\n                      width: '26px',\n                    }}\n                    src={logo}\n                    alt=\"logo\"\n                  />\n                </NavLink>\n                <NavLink className=\"nav-item nav-link\" to=\"/admin\">\n                  Admin\n                </NavLink>\n                <NavLink className=\"nav-item nav-link\" to=\"/preview\">\n                  Preview\n                </NavLink>\n\n                <AppNavigationButton\n                  text=\"Export HTML\"\n                  type=\"primary\"\n                  handleClick={this.exportHtml}\n                />\n\n                <AppNavigationButton\n                  text=\"Export JSON\"\n                  type=\"primary\"\n                  handleClick={this.exportJson}\n                />\n\n                <UploadFile onDrop={this.onDrop} />\n              </div>\n            </nav>\n          ) : (\n            ''\n          )}\n          <Route exact path=\"/\" component={Welcome} />\n\n          <Route\n            exact\n            path=\"/preview\"\n            component={withProps(Preview, { json: this.state.json })}\n          />\n          <Route\n            exact\n            path=\"/admin\"\n            component={withProps(Admin, {\n              json: this.state.json,\n              updateStateJson: this.updateStateJson,\n            })}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.b9afc9fb.svg\";"],"sourceRoot":""}